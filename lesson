#! /usr/bin/env bash
# SPDX-FileCopyrightText: © 2020 Chindraba (Ronald Lamoreaux) <code@chindraba.work>
# SPDX-License-Identifier: MIT

# Copyright © 2020  Chindraba (Ronald Lamoreaux)
# 
#     <upskill@chindraba.work>
# 
# — All Rights Reserved
# 
# The MIT License
#     
#     Permission is hereby granted, free of charge, to any person obtaining a
#     copy of this software and associated documentation files (the "Software"),
#     to deal in the Software without restriction, including without limitation
#     the rights to use, copy, modify, merge, publish, distribute, sublicense,
#     and/or sell copies of the Software, and to permit persons to whom the
#     Software is furnished to do so, subject to the following conditions:
# 
#     The above copyright notice and this permission notice shall be included
#     in all copies or substantial portions of the Software
# 
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGE MENT. IN NO EVENT SHALL
#     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
#     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#     DEALINGS IN THE SOFTWARE.

# Script to pre-build repos for lessons from the FEWD class.
# Up to 3 command arguments:
#   repo_name: the name applied to the repo, and the "project" name inside the
#       files for documentation
#   title: the title of the exercise/homework. Used as the <title> in the HTML
#       and in the README's [optional]
#   desc: A description of the project [optional]
# Will also use a pair of files <repo_name>.css and <repo_name>.sc for the CSS
# and Starter code, respectively, supplied by the instructor. If the file is not
# found, a placehold text is added.

[ -z "$1" ] && { printf "Nothing to do without a repo name\n"; exit 1; }
repo_name="$1"
[ -e "${repo_name}.dat" ] || {
    printf "Cannot find data file '%s.dat'\n" "${repo_name}"
    cat > "${repo_name}.dat" <<'EOT'
# Title of the activity
title='Lesson x: Activity: Name'

# Description of the project, from the slide
read -r -d '' desc <<'EODesc'
    Description fron the slide goes here.
EODesc

# The STARTER CODE provided in the instructions, or CodePen
# Please indent all lines by at least four spaces.
read -r -d '' starter_code <<'EOCode'
    STARTER CODE goes here.
EOCode

# The STARTER CSS, if any, from the CodePen
# Please indent all lines by at least four spaces.
read -r -d '' starter_css <<'EOStyle'
    STARTER CSS goes here.
EOStyle
EOT
    printf "\nCreated data file '%s.dat'.\nEdit this file and re-run the command.\n\n" "${target}"
    exit 1
}
source "${repo_name}.dat"
cp -r ga-template "${repo_name}"
export repo_name
export title
export desc
export starter_code
export starter_css
for target_file in README.md README.txt CONTRIBUTING.md CONTRIBUTING.txt project_page.html .git/config; do
    target="${repo_name}/${target_file}"
    perl -pi -e 's/<<PRJ>>/$ENV{"repo_name"}/g' "${target}"
    perl -pi -e 's/<<TITLE>>/$ENV{"title"}/g' "${target}"
    perl -pi -e 's/<<DESC>>/$ENV{"desc"}/g' "${target}"
    perl -pi -e 's/<<STARTER_CSS>>/$ENV{"starter_css"}/g' "${target}"
    perl -pi -e 's/<<STARTER_CODE>>/$ENV{"starter_code"}/g' "${target}"
done
instruction_1='Create the repos where needed.'
instruction_2='Use the repo name: %s.'
instruction_3='If desired, use the description of:'
printf "\n${instruction_1}\n${instruction_2}\n${instruction_3}\n\t'%s'\n" "${repo_name}" "${title}"

